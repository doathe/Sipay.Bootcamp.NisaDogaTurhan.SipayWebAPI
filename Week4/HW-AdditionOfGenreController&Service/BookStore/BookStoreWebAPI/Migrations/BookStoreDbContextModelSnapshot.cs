// <auto-generated />
using System;
using BookStoreWebAPI.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace BookStoreWebAPI.Migrations
{
    [DbContext(typeof(BookStoreDbContext))]
    partial class BookStoreDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("BookStoreWebAPI.Entities.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("GenreId")
                        .HasColumnType("integer");

                    b.Property<int>("PageCount")
                        .HasColumnType("integer");

                    b.Property<DateTime>("PublishDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("Id");

                    b.HasIndex("GenreId");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.ToTable("Book", "BookStore");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            GenreId = 1,
                            PageCount = 200,
                            PublishDate = new DateTime(2001, 6, 12, 0, 0, 0, 0, DateTimeKind.Utc),
                            Title = "Lean Startup"
                        },
                        new
                        {
                            Id = 2,
                            GenreId = 2,
                            PageCount = 250,
                            PublishDate = new DateTime(2010, 5, 23, 0, 0, 0, 0, DateTimeKind.Utc),
                            Title = "Herland"
                        },
                        new
                        {
                            Id = 3,
                            GenreId = 3,
                            PageCount = 540,
                            PublishDate = new DateTime(2001, 12, 21, 0, 0, 0, 0, DateTimeKind.Utc),
                            Title = "Dune"
                        });
                });

            modelBuilder.Entity("BookStoreWebAPI.Entities.Genre", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(true);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.ToTable("Genre", "BookStore");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsActive = true,
                            Name = "Personal Growth"
                        },
                        new
                        {
                            Id = 2,
                            IsActive = true,
                            Name = "Science Fiction"
                        },
                        new
                        {
                            Id = 3,
                            IsActive = true,
                            Name = "Romance"
                        });
                });

            modelBuilder.Entity("BookStoreWebAPI.Entities.Book", b =>
                {
                    b.HasOne("BookStoreWebAPI.Entities.Genre", "Genre")
                        .WithMany("Books")
                        .HasForeignKey("GenreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Genre");
                });

            modelBuilder.Entity("BookStoreWebAPI.Entities.Genre", b =>
                {
                    b.Navigation("Books");
                });
#pragma warning restore 612, 618
        }
    }
}
